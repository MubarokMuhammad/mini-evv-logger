// Package docs GENERATED BY SWAG; DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "EVV Logger API Support",
            "email": "support@evvlogger.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/health": {
            "get": {
                "description": "Check if the API is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/schedules": {
            "get": {
                "description": "Retrieve all schedules in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedules"
                ],
                "summary": "Get all schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Schedule"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/schedules/active": {
            "get": {
                "description": "Retrieve the currently active visit if any",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visits"
                ],
                "summary": "Get active visit",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Schedule"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/schedules/today": {
            "get": {
                "description": "Retrieve all schedules for today",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedules"
                ],
                "summary": "Get today's schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Schedule"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/schedules/{id}": {
            "get": {
                "description": "Retrieve a specific schedule by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedules"
                ],
                "summary": "Get schedule by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Schedule"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/stats": {
            "get": {
                "description": "Retrieve system statistics including completed, missed, and upcoming schedules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get system statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Stats"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid input provided"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "required": [
                "address",
                "latitude",
                "longitude"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main Street, Singapore 123456"
                },
                "latitude": {
                    "type": "number",
                    "example": 1.3521
                },
                "longitude": {
                    "type": "number",
                    "example": 103.8198
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-12-01T09:00:00Z"
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "required": [
                "client_email",
                "client_name",
                "client_phone",
                "date",
                "end_time",
                "id",
                "location",
                "service_name",
                "start_time",
                "status"
            ],
            "properties": {
                "actual_end_time": {
                    "type": "string"
                },
                "actual_start_time": {
                    "type": "string"
                },
                "client_email": {
                    "type": "string",
                    "example": "john.doe@email.com"
                },
                "client_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "client_phone": {
                    "type": "string",
                    "example": "+65 9123 4567"
                },
                "date": {
                    "type": "string",
                    "example": "2023-12-01"
                },
                "end_location": {
                    "$ref": "#/definitions/models.Location"
                },
                "end_time": {
                    "type": "string",
                    "example": "10:00"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "notes": {
                    "type": "string",
                    "example": "Additional notes about the visit"
                },
                "service_name": {
                    "type": "string",
                    "example": "Home Nursing Care"
                },
                "service_notes": {
                    "type": "string",
                    "example": "Patient requires assistance with medication"
                },
                "start_location": {
                    "$ref": "#/definitions/models.Location"
                },
                "start_time": {
                    "type": "string",
                    "example": "09:00"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "scheduled",
                        "in-progress",
                        "completed",
                        "cancelled",
                        "missed"
                    ],
                    "example": "scheduled"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                }
            }
        },
        "models.Stats": {
            "type": "object",
            "properties": {
                "completed_today": {
                    "type": "integer",
                    "example": 5
                },
                "missed_schedules": {
                    "type": "integer",
                    "example": 2
                },
                "total_schedules": {
                    "type": "integer",
                    "example": 25
                },
                "upcoming_today": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "models.Task": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "completed": {
                    "type": "boolean",
                    "example": false
                },
                "description": {
                    "type": "string",
                    "example": "Measure blood pressure and heart rate"
                },
                "id": {
                    "type": "string",
                    "example": "task-1"
                },
                "name": {
                    "type": "string",
                    "example": "Check vital signs"
                },
                "reason": {
                    "type": "string",
                    "example": "Task completed successfully"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "EVV Logger API",
	Description:      "Electronic Visit Verification (EVV) Logger API for managing healthcare visits and schedules",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}